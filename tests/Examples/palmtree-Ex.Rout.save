
R Under development (unstable) (2018-01-13 r74117) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "palmtree"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "palmtree-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('palmtree')
Loading required package: partykit
Loading required package: grid
Loading required package: libcoin
Loading required package: mvtnorm
Loading required package: rpart
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("palmtree")
> ### * palmtree
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: palmtree
> ### Title: Partially Additive (Generalized) Linear Model Trees
> ### Aliases: palmtree print.palmtree plot.palmtree coef.palmtree
> ###   logLik.palmtree predict.palmtree
> ### Keywords: tree
> 
> ### ** Examples
> 
> ## one DGP from Sies and Van Mechelen (2015)
> dgp <- function(nobs = 1000, nreg = 5, creg = 0.4, ptreat = 0.5, sd = 1,
+   coef = c(1, 0.25, 0.25, 0, 0, -0.25), eff = 1)
+ {
+   d <- mvtnorm::rmvnorm(nobs,
+     mean = rep(0, nreg),
+     sigma = diag(1 - creg, nreg) + creg)
+   colnames(d) <- paste0("x", 1:nreg)
+   d <- as.data.frame(d)
+   d$a <- rbinom(nobs, size = 1, prob = ptreat)
+   d$err <- rnorm(nobs, mean = 0, sd = sd)
+ 
+   gopt <- function(d) {
+     as.numeric(d$x1 > -0.545) * as.numeric(d$x2 < 0.545)
+   }
+   d$y <- coef[1] + drop(as.matrix(d[, paste0("x", 1:5)]) %*% coef[-1]) -
+     eff * (d$a - gopt(d))^2 + d$err
+   d$a <- factor(d$a)
+   return(d)
+ }
> set.seed(1)
> d <- dgp()
> 
> ## estimate PALM tree with correctly specified global (partially
> ## additive) regressors and all variables considered for partitioning
> palm <- palmtree(y ~ a | x1 + x2 + x5 | x1 + x2 + x3 + x4 + x5, data = d)
> print(palm)
Partially additive linear model tree

Model formula:
y ~ a | x1 + x2 + x3 + x4 + x5

Fitted party:
[1] root
|   [2] x2 <= 0.55633
|   |   [3] x1 <= -0.5168: n = 271
|   |       (Intercept)          a1 
|   |         0.7604183  -0.8261878 
|   |   [4] x1 > -0.5168: n = 427
|   |       (Intercept)          a1 
|   |        0.01690781  0.97105223 
|   [5] x2 > 0.55633: n = 302
|       (Intercept)          a1 
|          1.158455   -1.085478 

Number of inner nodes:    2
Number of terminal nodes: 3
Number of parameters per node: 2
Objective function (residual sum of squares): 1063.744

Linear fixed effects (from palm model):
        x1         x2         x5 
 0.1997235  0.1888170 -0.2940163 
> plot(palm)
> 
> ## query coefficients
> coef(palm, model = "tree")
  (Intercept)         a1
3  0.76041827 -0.8261878
4  0.01690781  0.9710522
5  1.15845507 -1.0854781
> coef(palm, model = "palm")
        x1         x2         x5 
 0.1997235  0.1888170 -0.2940163 
> coef(palm, model = "all")
(Intercept)      .tree4      .tree5          x1          x2          x5 
  0.7604183  -0.7435105   0.3980368   0.1997235   0.1888170  -0.2940163 
  .tree3:a1   .tree4:a1   .tree5:a1 
 -0.8261878   0.9710522  -1.0854781 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  6.85 0.19 7.07 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')

